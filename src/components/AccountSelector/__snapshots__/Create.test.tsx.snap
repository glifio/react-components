// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create new account it creates a new account at the wallet index by default 1`] = `
.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
}

.c1 svg path {
  stroke: var(--black);
}

.c1:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c1:hover svg path {
  stroke: var(--purple-medium);
}

.c1:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c1:active svg path {
  stroke: var(--white) !important;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: 10px;
  text-align: left;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c2 > *:first-child {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 > *:last-child:not(.toggle-wrapper) {
  -webkit-flex: 0 0 50%;
  -ms-flex: 0 0 50%;
  flex: 0 0 50%;
}

.c2 span.info,
.c2 span.error {
  font-size: 0.875rem;
}

.c2 span.error {
  color: var(--red-medium);
}

.c3 .toggle-wrapper {
  position: relative;
}

.c3 input {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  opacity: 0;
}

.c3 .toggle {
  display: inline-block;
  position: relative;
  width: 2.25em;
  height: 1.5em;
  border-radius: 0.75em;
  border: 2px solid var(--blue-medium);
  background-color: var(--blue-medium);
}

.c3 .toggle::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: calc(1.5em - 4px);
  height: calc(1.5em - 4px);
  border-radius: 50%;
  background-color: var(--white);
}

.c3 input:checked ~ .toggle {
  border-color: var(--blue-dark);
  background-color: var(--blue-dark);
}

.c3 input:checked ~ .toggle::after {
  left: auto;
  right: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 10px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 > * {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.c0 > * label {
  margin-top: 10px;
}

.c0 > * button {
  width: 38.2%;
  min-width: -webkit-fit-content;
  min-width: -moz-fit-content;
  min-width: fit-content;
}

<div
  class="c0"
>
  <button
    class="c1"
  >
    Next account
  </button>
  <label
    class="c2 c3"
  >
    <div>
      <span>
        Expert Mode
      </span>
      
    </div>
    <div
      class="toggle-wrapper"
    >
      <input
        type="checkbox"
      />
      <span
        class="toggle"
      />
    </div>
  </label>
</div>
`;
