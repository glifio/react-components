// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Import private key configuration it renders correctly 1`] = `
.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
}

.c11 svg path {
  stroke: var(--black);
}

.c11:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c11:hover svg path {
  stroke: var(--purple-medium);
}

.c11:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c11:active svg path {
  stroke: var(--white) !important;
}

.c12 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
  color: var(--white);
  border-color: var(--green-medium);
  background: var(--green-medium);
  pointer-events: none;
  color: var(--gray-medium);
  border-color: var(--gray-medium);
  background: transparent;
}

.c12 svg path {
  stroke: var(--black);
}

.c12:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c12:hover svg path {
  stroke: var(--purple-medium);
}

.c12:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c12:active svg path {
  stroke: var(--white) !important;
}

.c12 svg path {
  stroke: var(--white);
}

.c12:hover {
  color: var(--green-medium);
  border-color: var(--green-medium);
  background: var(--white);
}

.c12:hover svg path {
  stroke: var(--green-medium);
}

.c12 svg path {
  stroke: var(--gray-medium);
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: var(--space-m);
  text-align: left;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 > *:first-child {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 > *:last-child:not(.toggle-wrapper) {
  -webkit-flex: 0 0 65%;
  -ms-flex: 0 0 65%;
  flex: 0 0 65%;
}

.c5 span.info,
.c5 span.error {
  font-size: 0.875rem;
}

.c5 span.error {
  color: var(--red-medium);
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: var(--space-m);
  text-align: left;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 * {
  text-align: center;
}

.c7 span.info,
.c7 span.error {
  font-size: 0.875rem;
}

.c7 span.error {
  color: var(--red-medium);
}

.c8 .button-wrapper {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: var(--space-m);
}

.c8 .button-wrapper > *:first-child {
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

.c8 .button-wrapper > *:not(:first-child) {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-transition: -webkit-transform 0.1s ease-out;
  -webkit-transition: transform 0.1s ease-out;
  transition: transform 0.1s ease-out;
}

.c8 .button-wrapper > *:not(:first-child):hover:not(:active) {
  -webkit-transform: scale(1.2);
  -ms-transform: scale(1.2);
  transform: scale(1.2);
}

.c8 .button-wrapper > *:not(:first-child):active {
  -webkit-transition: none;
  transition: none;
}

.c8 .unit-wrapper {
  position: relative;
}

.c8 .unit-wrapper input {
  width: 100%;
}

.c8 .unit-wrapper .unit {
  position: absolute;
  top: 50%;
  right: 1em;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: var(--purple-medium);
}

.c6 .toggle-wrapper {
  position: relative;
}

.c6 input {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  opacity: 0;
}

.c6 .toggle {
  display: inline-block;
  position: relative;
  width: 2.25em;
  height: 1.5em;
  border-radius: 0.75em;
  border: 2px solid var(--blue-medium);
  background-color: var(--blue-medium);
}

.c6 .toggle::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: calc(1.5em - 4px);
  height: calc(1.5em - 4px);
  border-radius: 50%;
  background-color: var(--white);
}

.c6 input:checked ~ .toggle {
  border-color: var(--blue-dark);
  background-color: var(--blue-dark);
}

.c6 input:checked ~ .toggle::after {
  left: auto;
  right: 0;
}

.c1 {
  padding: 1.5em;
  border-radius: 8px;
  overflow: hidden;
  text-align: center;
  word-break: break-word;
}

.c1 > *:first-child {
  margin-top: 0;
}

.c1 > *:last-child {
  margin-bottom: 0;
}

.c1 > svg:first-child {
  display: block;
  margin: 0 auto 1em;
}

.c1 > h2:first-child {
  margin: 0;
}

.c1 header:first-child {
  margin: -1.5em -1.5em 1.5em -1.5em;
  padding: 1.5em;
  background-color: var(--purple-medium);
  color: var(--white);
}

.c2 {
  background-color: var(--white);
  box-shadow: 0 0 0.5em var(--gray-light);
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: var(--space-m);
  margin: 1.5em 0;
}

.c10 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--space-m);
}

.c3 > p,
.c3 > hr {
  margin: 0.5em 0;
}

.c3 > p[role='button'] {
  margin: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--space-m);
  width: 100%;
  margin: 0 auto;
  max-width: 40em;
}

.c0 form {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--space-m);
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

<div
  class="c0"
>
  <form
    autocomplete="off"
  >
    
    <div
      class="c1 c2"
    >
      <h2>
        Import private key
      </h2>
      <hr />
      <div
        class="c3"
      >
        <span
          class="c4"
        >
          <span>
            Please enter your private key below to continue
          </span>
          <label
            class="c5 c6"
          >
            <div>
              <span>
                Hex
              </span>
              
            </div>
            <div
              class="toggle-wrapper"
            >
              <input
                type="checkbox"
              />
              <span
                class="toggle"
              />
            </div>
          </label>
        </span>
        <label
          class="c7 c8"
        >
          
          
          <div
            class="button-wrapper"
          >
            <div
              class="unit-wrapper"
            >
              <input
                autocomplete="off"
                class=""
                max=""
                min=""
                name="private-key"
                placeholder="Enter your Base64 private key"
                step="any"
                style="padding-right: 1em;"
                type="text"
                value=""
              />
              
            </div>
          </div>
          
        </label>
      </div>
    </div>
    <div
      class="c9 c10"
    >
      <button
        class="c11"
        type="button"
      >
        Back
      </button>
      <button
        class="c12"
        disabled=""
        type="submit"
      >
        Connect
      </button>
    </div>
  </form>
</div>
`;

exports[`Import private key configuration it sends the user to wallet view, with a wallet in state upon successful config 1`] = `
.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
  color: var(--white);
  border-color: var(--green-medium);
  background: var(--green-medium);
  pointer-events: none;
  color: var(--gray-medium);
  border-color: var(--gray-medium);
  background: transparent;
}

.c8 svg path {
  stroke: var(--black);
}

.c8:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c8:hover svg path {
  stroke: var(--purple-medium);
}

.c8:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c8:active svg path {
  stroke: var(--white) !important;
}

.c8 svg path {
  stroke: var(--white);
}

.c8:hover {
  color: var(--green-medium);
  border-color: var(--green-medium);
  background: var(--white);
}

.c8:hover svg path {
  stroke: var(--green-medium);
}

.c8 svg path {
  stroke: var(--gray-medium);
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
  pointer-events: none;
  color: var(--gray-medium);
  border-color: var(--gray-medium);
  background: transparent;
}

.c7 svg path {
  stroke: var(--black);
}

.c7:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c7:hover svg path {
  stroke: var(--purple-medium);
}

.c7:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c7:active svg path {
  stroke: var(--white) !important;
}

.c7 svg path {
  stroke: var(--gray-medium);
}

.c1 {
  padding: 1.5em;
  border-radius: 8px;
  overflow: hidden;
  text-align: center;
  word-break: break-word;
}

.c1 > *:first-child {
  margin-top: 0;
}

.c1 > *:last-child {
  margin-bottom: 0;
}

.c1 > svg:first-child {
  display: block;
  margin: 0 auto 1em;
}

.c1 > h2:first-child {
  margin: 0;
}

.c1 header:first-child {
  margin: -1.5em -1.5em 1.5em -1.5em;
  padding: 1.5em;
  background-color: var(--purple-medium);
  color: var(--white);
}

.c2 {
  background-color: var(--white);
  box-shadow: 0 0 0.5em var(--gray-light);
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: var(--space-m);
  margin: 1.5em 0;
}

.c6 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  position: relative;
  display: inline-block;
  background-color: var(--purple-medium);
  width: 3em;
  height: 3em;
  margin: 0;
}

.c4:after {
  position: absolute;
  display: block;
  content: '';
  top: 0;
  left: 0;
  background-color: var(--purple-dark);
  -webkit-animation-name: gxoozo;
  animation-name: gxoozo;
  -webkit-animation-duration: 2s;
  animation-duration: 2s;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
  width: calc(3em * 0.5);
  height: calc(3em * 0.5);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--space-m);
  width: 100%;
  margin: 0 auto;
  max-width: 40em;
}

.c0 form {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--space-m);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div
  class="c0"
>
  <form
    autocomplete="off"
  >
    
    <div
      class="c1 c2"
    >
      <h2>
        Import private key
      </h2>
      <hr />
      <div
        class="c3"
      >
        <span
          class="c4"
        />
        <p>
          Loading...
        </p>
      </div>
    </div>
    <div
      class="c5 c6"
    >
      <button
        class="c7"
        disabled=""
        type="button"
      >
        Back
      </button>
      <button
        class="c8"
        disabled=""
        type="submit"
      >
        Connect
      </button>
    </div>
  </form>
</div>
`;

exports[`Import private key configuration it works with hex keys 1`] = `
.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
  color: var(--white);
  border-color: var(--green-medium);
  background: var(--green-medium);
  pointer-events: none;
  color: var(--gray-medium);
  border-color: var(--gray-medium);
  background: transparent;
}

.c8 svg path {
  stroke: var(--black);
}

.c8:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c8:hover svg path {
  stroke: var(--purple-medium);
}

.c8:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c8:active svg path {
  stroke: var(--white) !important;
}

.c8 svg path {
  stroke: var(--white);
}

.c8:hover {
  color: var(--green-medium);
  border-color: var(--green-medium);
  background: var(--white);
}

.c8:hover svg path {
  stroke: var(--green-medium);
}

.c8 svg path {
  stroke: var(--gray-medium);
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  gap: 0.75rem;
  padding: 0.5em 0.75em;
  color: var(--black);
  border-width: 1px;
  border-style: solid;
  border-radius: 8px;
  border-color: var(--black);
  background: transparent;
  font-size: 1.25em;
  pointer-events: none;
  color: var(--gray-medium);
  border-color: var(--gray-medium);
  background: transparent;
}

.c7 svg path {
  stroke: var(--black);
}

.c7:hover {
  color: var(--purple-medium);
  border-color: var(--purple-medium);
}

.c7:hover svg path {
  stroke: var(--purple-medium);
}

.c7:active {
  color: var(--white) !important;
  border-color: var(--purple-medium) !important;
  background: var(--purple-medium) !important;
}

.c7:active svg path {
  stroke: var(--white) !important;
}

.c7 svg path {
  stroke: var(--gray-medium);
}

.c1 {
  padding: 1.5em;
  border-radius: 8px;
  overflow: hidden;
  text-align: center;
  word-break: break-word;
}

.c1 > *:first-child {
  margin-top: 0;
}

.c1 > *:last-child {
  margin-bottom: 0;
}

.c1 > svg:first-child {
  display: block;
  margin: 0 auto 1em;
}

.c1 > h2:first-child {
  margin: 0;
}

.c1 header:first-child {
  margin: -1.5em -1.5em 1.5em -1.5em;
  padding: 1.5em;
  background-color: var(--purple-medium);
  color: var(--white);
}

.c2 {
  background-color: var(--white);
  box-shadow: 0 0 0.5em var(--gray-light);
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  gap: var(--space-m);
  margin: 1.5em 0;
}

.c6 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c4 {
  position: relative;
  display: inline-block;
  background-color: var(--purple-medium);
  width: 3em;
  height: 3em;
  margin: 0;
}

.c4:after {
  position: absolute;
  display: block;
  content: '';
  top: 0;
  left: 0;
  background-color: var(--purple-dark);
  -webkit-animation-name: gxoozo;
  animation-name: gxoozo;
  -webkit-animation-duration: 2s;
  animation-duration: 2s;
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
  width: calc(3em * 0.5);
  height: calc(3em * 0.5);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--space-m);
  width: 100%;
  margin: 0 auto;
  max-width: 40em;
}

.c0 form {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: var(--space-m);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div
  class="c0"
>
  <form
    autocomplete="off"
  >
    
    <div
      class="c1 c2"
    >
      <h2>
        Import private key
      </h2>
      <hr />
      <div
        class="c3"
      >
        <span
          class="c4"
        />
        <p>
          Loading...
        </p>
      </div>
    </div>
    <div
      class="c5 c6"
    >
      <button
        class="c7"
        disabled=""
        type="button"
      >
        Back
      </button>
      <button
        class="c8"
        disabled=""
        type="submit"
      >
        Connect
      </button>
    </div>
  </form>
</div>
`;
